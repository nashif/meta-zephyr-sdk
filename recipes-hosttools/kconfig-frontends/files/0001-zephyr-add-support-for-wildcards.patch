From 23b426d38d6ce143c1c1cdd9f1c62176a17409b5 Mon Sep 17 00:00:00 2001
From: Anas Nashif <anas.nashif@intel.com>
Date: Wed, 16 Aug 2017 23:22:45 -0400
Subject: [PATCH 1/2] zephyr: add support for wildcards

Signed-off-by: Anas Nashif <anas.nashif@intel.com>
---
 libs/parser/lconf.l | 37 +++++++++++++++++++++++++++++++++++++
 libs/parser/lkc.h   |  1 +
 libs/parser/yconf.y |  2 +-
 3 files changed, 39 insertions(+), 1 deletion(-)

diff --git a/libs/parser/lconf.l b/libs/parser/lconf.l
index c410d25..502b9c5 100644
--- a/libs/parser/lconf.l
+++ b/libs/parser/lconf.l
@@ -8,6 +8,7 @@
  * Released under the terms of the GNU GPL v2.0.
  */
 
+#include <glob.h>
 #include <limits.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -347,6 +348,42 @@ void zconf_nextfile(const char *name)
 	current_file = file;
 }
 
+void zconf_nextfiles(const char *wildcard)
+{
+        glob_t g;
+        char **w;
+        int i;
+        char *env, fullname[PATH_MAX+1];
+        const char *expanded = sym_expand_string_value(wildcard);
+
+        if (glob(expanded, 0, NULL, &g) != 0) {
+                env = getenv(SRCTREE);
+                if (env) {
+                        sprintf(fullname, "%s/%s", env, expanded);
+                        if (glob(fullname, 0, NULL, &g) != 0) {
+                                return;
+                        }
+                } else {
+                        return;
+                }
+        }
+        if (g.gl_pathv == NULL) {
+                globfree(&g);
+                return;
+        }
+
+        /* working through files backwards, since
+         * we're first pushing them on a stack
+         * before actually handling them.
+         */
+        for (i = g.gl_pathc; i > 0; i--) {
+                w = &g.gl_pathv[i - 1];
+                zconf_nextfile(*w);
+        }
+
+        globfree(&g);
+}
+
 static void zconf_endfile(void)
 {
 	struct buffer *parent;
diff --git a/libs/parser/lkc.h b/libs/parser/lkc.h
index 91ca126..b1f1cc3 100644
--- a/libs/parser/lkc.h
+++ b/libs/parser/lkc.h
@@ -73,6 +73,7 @@ void zconf_starthelp(void);
 FILE *zconf_fopen(const char *name);
 void zconf_initscan(const char *name);
 void zconf_nextfile(const char *name);
+void zconf_nextfiles(const char *name);
 int zconf_lineno(void);
 const char *zconf_curname(void);
 
diff --git a/libs/parser/yconf.y b/libs/parser/yconf.y
index f57c062..8b4a6e7 100644
--- a/libs/parser/yconf.y
+++ b/libs/parser/yconf.y
@@ -393,7 +393,7 @@ menu_block:
 source_stmt: T_SOURCE prompt T_EOL
 {
 	printd(DEBUG_PARSE, "%s:%d:source %s\n", zconf_curname(), zconf_lineno(), $2);
-	zconf_nextfile($2);
+	zconf_nextfiles($2);
 };
 
 /* comment entry */
-- 
2.9.4

